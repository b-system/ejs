<%
/**
 *
 * @requires {string} title
 */
const props = {
    id: typeof id !== 'undefined' ? id : null,
    title,
    alignCenter: typeof alignCenter !== 'undefined' ? alignCenter : 'left',
    isPlus: typeof isPlus === 'undefined' ? true : isPlus,
    isDarkened: typeof isDarkened === 'undefined' ? false : isDarkened,
    isDark: typeof isDark === 'undefined' ? false : isDark,
    hasBorder: typeof hasBorder === 'undefined' ? false : hasBorder,
}

const styles = {
    align: {
            toString: () => (props.alignCenter ? 'text-center' : 'text-left')
    },
    darkened: {
            toString: () => (props.isDarkened ? 'darkened' : '')
    },
    dark: {
        toString: () => (props.isDark ? 'data-b-system-theme="dark"' : '')
    },  
    border: {
        toString: () => (props.hasBorder ? 'section-divider' : '')
    },
}
%>

<div class="module <%- styles.border -%> <%- styles.darkened -%> basic-content" id="<%- props.id -%>" <%- styles.dark -%>>
    <div class="container">
        <% if(props.isPlus == false) { %>
            <h2 class="<%- styles.align -%>"><%- props.title -%></h2>
        <% } else { %>
            <h1 class="<%- styles.align -%>"><%- props.title -%></h1>
        <% } %>
    </div>
</div>
