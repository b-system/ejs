<%
/**
 *
 * @requires {string} title
 * @requires {string} text
 */

const VARIANTS = {
    START: 'start',
    START_FIT: 'start-fit',
    CENTER: 'center',
    TOW_COLUMNS: '2-columns'
}
const props = {
    title,
    text,
    variant: typeof variant !== 'undefined' ? variant : VARIANTS.START,
    haveBorder
}

function validate(props) {
    if (!Object.values(VARIANTS)
            .includes(props.variant)) {
        throw new Error(`The variant ${props.variant} doesn't exists`)
    }
}
validate(props)

const data = {
    isTowColumns: props.variant === VARIANTS.TOW_COLUMNS
}

const styles = {
    variant: {
        toString: () => (props.variant === VARIANTS.START ? 'basic-content-simple' : `basic-content-simple ${props.variant}`)
    },
    text: {
        toString: () => (props.variant === VARIANTS.START ? 'col-lg-7'
                : props.variant === VARIANTS.START_FIT ? 'col-lg-10'
                        : props.variant === VARIANTS.CENTER ? 'text-center mx-auto col-md-8 col-xl-10 col-xxl-8'
                                : '')
    },
    border: {
    toString: () => (props.haveBorder ? 'section-divider' : '')
    }
}
%>

<div class="module <%- styles.border -%> basic-content <%- styles.variant -%>">
    <div class="container">
        <% if(data.isTowColumns) { %>
            <div class="row align-items-center">
                <div class="col-12 col-lg-6 text-center text-lg-start">
                    <h2><%- props.title -%></h2>
                </div>
                <div class="col-12 col-lg-6 text-center text-lg-start">
                    <p class="body-light-gray-text"><%- props.text -%></p>
                </div>
            </div>
        <% } else { %>
            <h1 class="space-bottom-32 <%- styles.text -%>"><%- props.title -%></h1>
            <p class="body-light-gray-text <%- styles.text -%>"><%- props.text -%></p>
        <% } %>
    </div>
</div>

