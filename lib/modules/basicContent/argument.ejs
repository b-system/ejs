<%
/**
 *
 * @requires [{title, text}] columns
 */
const props = {
    columns,
    isDarkened: typeof isDarkened === 'undefined' ? false : isDarkened,
    isDark: typeof isDark === 'undefined' ? false : isDark,
    hasBorder: typeof hasBorder === 'undefined' ? false : hasBorder,
}

const styles = {
    darkened: {
            toString: () => (props.isDarkened ? 'darkened' : '')
        },
    dark: {
        toString: () => (props.isDark ? 'data-b-system-theme="dark"' : '')
    },  
    border: {
        toString: () => (props.hasBorder ? 'section-divider' : '')
    },
}
%>
<div class="module <%- styles.border -%> <%- styles.darkened -%> basic-content basic-content-arguments" <%- styles.dark -%>>
    <div class="container">
        <div class="row space-y-32 space-y-sm-40 ">
            <% props.columns.forEach((column)=> { %>
                <% if(column.alignCenter == true ) { %>
                    <div class="d-flex flex-column align-items-center text-center col-12 col-md-6 col-lg-4 my-lg-0 space-y-24">
                        <h2 class="col-9 mx-0"><%- column.title -%></h2>
                        <p class="body-light-gray-text col-9"><%- column.text -%></p>
                    </div>
                <% } %>
                <% if(column.alignCenter == false ) { %>
                    <div class="d-flex flex-column col-12 col-md-6 col-lg-4 my-lg-0 space-y-24">
                        <h2 class="col-9 mx-0"><%- column.title -%></h2>
                        <p class="body-light-gray-text col-9"><%- column.text -%></p>
                    </div>
                <% } %>
            <% }) %>
        </div>
    </div>
</div>


