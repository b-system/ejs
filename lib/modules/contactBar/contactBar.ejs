<%
    const props = {
        id: typeof id !== 'undefined' ? id : null,
        links: typeof links !== 'undefined' ? links : [],
        texts: typeof texts !== 'undefined' ? texts : [],
        socials: typeof socials !== 'undefined' ? socials : [],
        isDarkened: typeof isDarkened !== 'undefined' ? isDarkened : false,
        isDark: typeof isDark !== 'undefined' ? isDark : false,
        hasBorder: typeof hasBorder !== 'undefined' ? hasBorder : false,
        background: typeof background !== 'undefined' ? background : null,
    }

    const styles = {
        contactBar: {
            darkened: {
                toString: () => (props.isDarkened ? 'darkened' : '')
            },
            dark: {
            toString: () => (props.isDark ? 'data-b-system-theme="dark"' : '')
            },
            border: {
            toString: () => (props.hasBorder ? 'section-divider' : '')
            },
            background: {
                toString: () => (props.background ? `section-bg-color bg-${props.background}` : '')
            },
        }
    }
%>

<div class="contact-bar module <%- styles.contactBar.border -%> <%- styles.contactBar.background -%> <%- styles.contactBar.darkened -%>" id="<%- props.id -%>" <%- styles.contactBar.darkened -%>>
    <div class="contact-bar-contact column-gap-24">
        <% props.links.forEach((link) => { %>
            <%- include( `${component}/links/link`, {
                href: link.href,
                label: link.label,
                icon: link.icon,
                iconPosition: link.iconPosition
            } ) %>
        <% }) %>
    </div>
    <p class="contact-bar-text body-italic-text"><%= props.texts.name %></p>
    <div class="contact-bar-social d-flex">
        <p class="contact-bar-text contact-bar-social-text"><%= props.texts.contact %></p>
        <% props.socials.forEach((social) => { %>
            <%- include(`${component}/button/button`, { isOnlyIcon: true, icon: social}) -%>
        <% }) %>
    </div>
</div>