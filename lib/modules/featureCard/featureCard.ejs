<%
/**
 * @required { href:String, label:String, icon:String, iconPosition:String } link
 */
    const props = {
        title: typeof title !== 'undefined' ? title : null,
        cards: typeof cards !== 'undefined' ? cards : [],
        link: link,
        isDarkened: typeof isDarkened !== 'undefined' ? isDarkened : false,
        isDark: typeof isDark !== 'undefined' ? isDark : false
    }
    const styles = {
        featureCard: {
            darkened: {
                toString: () => (props.isDarkened ? 'darkened' : '')
            },
            dark: {
            toString: () => (props.isDark ? 'data-bsystem="dark"' : '')
            }
        }
    }
%>

<section class="section section-divider <%- styles.featureCard.darkened -%>" <%- styles.featureCard.dark -%>>
    <div class="container feature-card d-flex flex-column align-items-center space-y-48 space-y-md-56 space-y-xl-72">
        <h3 class="feature-card-title text-center"><%- props.title -%></h3>
        <div class="feature-card-content d-grid grid-4 grid-md-8 grid-xl-12 w-100">
            <% props.cards.forEach((card)=> { %>
                <div class="feature-card-wrapper col-span-4">
                    <%- include( `${component}/card/basic`, {
                        img: card.img,
                        imgAlt: card.alt,
                        titleBasic: card.title,
                        textBasic: card.text,
                        isDarkened: card.isDarkened
                    } ) %>
                </div>
            <% }) %>
        </div>
        <%- include( `${component}/links/link`, {
            href: props.link.href,
            label: props.link.label,
            icon: props.link.icon,
            iconPosition: props.link.iconPosition
        } ) %>
    </div>
</section>