<%
/**
 * @required {string} href
 * @required {string} label
 */

const WEIGHT_ENUM = {
    BOLD: 'bold',
    MEDIUM: 'medium',
    LIGHT: 'light',
    REGULAR: 'regular'
}

const props = {
    href: href,
    label: label,
    weight: typeof weight !== 'undefined' ? weight : 'regular',
    icon: typeof icon !== 'undefined' ? icon : '',
    iconPosition: typeof iconPosition !== 'undefined' ? iconPosition : 'after'
}

function validate(props) {
    const iconPosition = ['after', 'before']

    if (!iconPosition.includes(props.iconPosition)) {
        throw new Error(`The iconPosition ${props.iconPosition} doesn't exists`)
    }

    if (!Object.values(WEIGHT_ENUM)
            .includes(props.weight)) {
        throw new Error(`The weight ${props.weight} isn't allowed`)
    }
}
validate(props)

const data = {
    icon: {
        isBefore: '' !== props.icon && 'before' === props.iconPosition,
        isAfter: '' !== props.icon && 'after' === props.iconPosition
    }
}
const styles = {
    link: {
        toString: () => {
            return WEIGHT_ENUM.REGULAR === props.weight ? '' : `link-${props.weight}`
        }
    }
}
%>

<a href="<%- props.href -%>" class="action-link <%- styles.link -%>">

    <% if ( data.icon.isBefore ) { %>
        <i class="icon-<%= props.icon %>"></i>
    <% } %>

    <span><%= props.label %></span>

    <% if ( data.icon.isAfter  ) { %>
        <i class="icon-<%= props.icon %>"></i>
    <% } %>

</a>
