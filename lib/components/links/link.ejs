<%
    /**
    * @required {string} href
    * @required {string} label
    */

    const props = {
        href: href,
        label: label,
        icon: typeof icon !== 'undefined' ? icon : '',
        iconPosition: typeof iconPosition !== 'undefined' ? iconPosition : 'after',
    }

    function validate(props) {
        const iconPosition = ['after', 'before']

        if ( ! iconPosition.includes( props.iconPosition ) ) {
            throw new Error(`The iconPosition ${props.iconPosition} doesn't exists`)
        }
    }
    validate(props)

    const styles = {
        link: () => {
            return `${ '' !== props.icon && 'before' === props.iconPosition ? ' class=has-icon-before' : '' }
                    ${ '' !== props.icon && 'after' === props.iconPosition ? ' class=has-icon-after' : '' }`
                    .replace(/\s+/g, ' ')
                    .trim()
        }
    }
%>

<a href="<%= props.href %>"<%= styles.link() %>>

    <% if ( '' !== props.icon && 'before' === props.iconPosition ) { %>
        <i class="icon-<%= props.icon %>"></i>
    <% } %>

    <%= props.label %>

    <% if ( '' !== props.icon && 'after' === props.iconPosition ) { %>
        <i class="icon-<%= props.icon %>"></i>
    <% } %>

</a>
