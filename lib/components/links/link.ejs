<%
/**
 * @required {string} label
 */

const WEIGHT_ENUM = {
    BOLD: 'bold',
    MEDIUM: 'medium',
    LIGHT: 'light',
    REGULAR: 'regular'
}

const props = {
    label: label,
    href: typeof href !== 'undefined' ? href : '',
    weight: typeof weight !== 'undefined' ? weight : WEIGHT_ENUM.MEDIUM,
    icon: typeof icon !== 'undefined' ? icon : '',
    iconPosition: typeof iconPosition !== 'undefined' ? iconPosition : 'after',
    asSpan: typeof asSpan !== 'undefined' ? asSpan : 'false',
}

function validate(props) {
    const iconPosition = ['after', 'before']

    if (!iconPosition.includes(props.iconPosition)) {
        throw new Error(`The iconPosition ${props.iconPosition} doesn't exists`)
    }

    if (!Object.values(WEIGHT_ENUM)
            .includes(props.weight)) {
        throw new Error(`The weight ${props.weight} isn't allowed`)
    }
}
validate(props)

const data = {
    icon: {
        isBefore: '' !== props.icon && 'before' === props.iconPosition,
        isAfter: '' !== props.icon && 'after' === props.iconPosition
    }
}

const attrs = {
    href: {
        toString: () => {
            return props.href ? `href='${props.href}'` : ''
        }
    }
}

const styles = {
    link: {
        toString: () => {
            return WEIGHT_ENUM.MEDIUM === props.weight ? '' : `link-${props.weight}`
        }
    }
}
%>
<% if(props.asSpan) { %>
    <span class="action-link <%- styles.link -%>">
<% } else { %>
    <a <%- attrs.href -%> class="action-link <%- styles.link -%>">
<% } %>

        <% if ( data.icon.isBefore ) { %>
            <i class="icon-<%= props.icon %>"></i>
        <% } %>

        <span><%= props.label %></span>

        <% if ( data.icon.isAfter  ) { %>
            <i class="icon-<%= props.icon %>"></i>
        <% } %>

<% if(props.asSpan) { %>
    </span>
<% } else { %>
    </a>
<% } %>
