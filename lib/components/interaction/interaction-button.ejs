<%
/**
 *@requires {string} icon
 */

const VALID_ICONS = ['next', 'back', 'links', 'download', 'more', 'heart']

const props = {
    icon: icon,
    isRounded: typeof isRounded !== 'undefined' ? isRounded : false,
    isDarkened: typeof isDarkened !== 'undefined' ? isDarkened : false,
    isTight: typeof isTight !== 'undefined' ? isTight : false
}

function validate(props) {
    if (!VALID_ICONS.includes(props.icon)) {
        throw new Error(`${props.icon} isn't a valid icon. Tray with: ${VALID_ICONS.join(', ')}`)
    }
}

validate(props)

const styles = {
    button: {
        rounded: {
            toString: () => (props.isRounded ? 'btn-interactive-rounded' : '')
        },
        darkened: {
            toString: () => (props.isDarkened ? 'btn-interactive-darkened' : '')
        },
        tight: {
            toString: () => (props.isTight ? 'btn-interactive-tight' : '')
        }
    }
}

%>

<button class="btn-interactive <%- styles.button.rounded -%> <%- styles.button.darkened -%> <%- styles.button.tight -%>">
    <%- include(`${component}/icons/icon`, {icon: props.icon}) %>
</button>
