<%
    /**
    * @required {string} type
    * @required {string} icon
    */

    const props = {
        type: type,
        icon: icon,
        href: typeof href !== 'undefined' ? href : '#',
        isCondensed: typeof isCondensed !== 'undefined' ? isCondensed : false,
    }

    function validate( props ) {
        if( ! [ 'rounded', 'squared' ].includes( props.type ) ) {
            throw new Error( `The type ${props.type} doesn't exists` )
        }
    }
    validate( props )

    const styles = {
		button: () => {
			return `${ 'squared' === props.type ? 'squared-button' : '' }
					${ 'rounded' === props.type && ! props.isCondensed ? 'rounded-button' : '' }
					${ 'rounded' === props.type && props.isCondensed ? 'rounded-button condensed' : '' }`
					.replace(/\s+/g, ' ')
					.trim()
		}
    }
%>

<button href="<%= props.href %>" class="button-component <%= styles.button() %>">
    <i class="icon-<%= props.icon %>"></i>
</button>
