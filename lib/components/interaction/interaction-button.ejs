<%
const props = {
    isNext: typeof isNext !== 'undefined' ? isNext : false,
    isBack: typeof isBack !== 'undefined' ? isBack : false,
    isDown: typeof isDown !== 'undefined' ? isDown : false,
    isRounded: typeof isRounded !== 'undefined' ? isRounded : false,
    isDarkened: typeof isDarkened !== 'undefined' ? isDarkened : false,
    isTight: typeof isTight !== 'undefined' ? isTight : false
}

const styles = {
    button: {
        rounded: {
            toString: () => (props.isRounded ? 'btn-interactive-rounded' : '')
        },
        darkened: {
            toString: () => (props.isDarkened ? 'btn-interactive-darkened' : '')
        },
        tight: {
            toString: () => (props.isTight ? 'btn-interactive-tight' : '')
        }
    }
}

const data = {
    icon: {
        toString: () => (
                props.isNext ? 'next' : props.isBack ? 'back' : props.isDown ? 'links' : ''
        )
    }
}
%>

<button class="btn-interactive <%- styles.button.rounded -%> <%- styles.button.darkened -%> <%- styles.button.tight -%>">
    <%- include(`${component}/icons/icon`, {icon: data.icon}) %>
</button>
