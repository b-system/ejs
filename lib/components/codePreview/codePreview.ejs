<%
/**
 * @required {string} idAccordion
 * @required {string} idItem
 * @required {string} label
 * @required {string} content
 */

const props = {
    idAccordion,
    idItem,
    isDarkened,
    content
}
const styles = {
    accordion: {
        darkened: {
            toString: () => (props.isDarkened ? 'darkened' : '')
        }
    }
}
%>
<div class="section">
    <div class="container">
        <div class="accordion-item <%- styles.accordion.darkened -%>">
            <h2 id="heading-<%= props.idItem %>" class="accordion-header">
                <button class="accordion-button position-relative body-medium-text <%= `${ props.isOpen ? '' : 'collapsed' }` %>" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-<%= props.idItem %>" aria-expanded="<%= `${ props.isOpen ? '' : 'false' }` %>" aria-controls="collapse-<%= props.idItem %>">
                    View exampleÂ´s code
                </button>
            </h2>
            <div id="collapse-<%= props.idItem %>" class="accordion-collapse collapse <%= `${ props.isOpen ? 'show' : '' }` %>" aria-labelledby="heading-<%= props.idItem %>" data-bs-parent="#<%= props.idAccordion %>">
                <div class="accordion-body overflow-hidden">
                     <pre>
                        <code class="language-html">
                            <%= props.content.split(/\r?\n/).filter(line => line !== '        ').join("\n").replace('   ', ' ') _%>
                        </code>
                    </pre>
                </div>
            </div>
        </div>
    </div>
</div>
