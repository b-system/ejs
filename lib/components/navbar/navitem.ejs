<%
/**
 * @required {string} label
 */
const props = {
    label: label,
    href: typeof href !== 'undefined' ? href : '',
    display: typeof display !== 'undefined' ? display : '',
    repeat: typeof repeat !== 'undefined' ? repeat : 0,
    entries: typeof entries !== 'undefined' ? entries : [],
    itemId: typeof id !== 'undefined' ? id : `${label.replace(/\s+/g, '')
            .toLowerCase()}_dropdown_menu`,
    key: typeof key !== 'undefined' ? key : ''
}

const data = {
    hasMenu: 0 < props.entries.length
}

const styles = {
    navLink: {
        isActive: {
            toString: () => ('' !== props.key && activeRoute.includes(props.key))
            || ('#' !== props.href && activeRoute === props.href) ? 'active' : ''
        }
    },
    display: {
        toString: () => {
            return props.display ? `dropdown-${props.display}` : ''
        }
    },
    repeat: {
        toString: () => {
            return props.repeat ? `repeat-${props.repeat}` : ''
        }
    }
}

const methods = {
    dropdown: {
        item: {
            isActive: (item) => activeRoute === item.href ? 'active' : '',
            hasSubmenu: (item) => item.entries?.length > 0,
            hasGroup: (item) => item.group?.length > 0
        }
    }
}

const attrs = {
    href: {
        toString: () => {
            return props.href ? `href="${props.href}"` : ''
        }
    }
}
%>

<li class="nav-item <% if( data.hasMenu ) { %> dropdown dropdown-center <% } %> ">
    <a class="nav-link <%- styles.navLink.isActive -%>" <%- attrs.href %>
    <% if( data.hasMenu ) { %>
       id="<%- props.itemId -%>" role="button" data-bs-toggle="dropdown" aria-expanded="false"
            <% } %>
    >
        <%- props.label %>
    </a>
    <% if ( data.hasMenu ) { %>

        <% if( methods.dropdown.item.hasGroup(props.entries[0])) { %>
            <div class="dropdown-menu <%- styles.display -%> <%- styles.repeat -%>"
                 aria-labelledby="<%- props.itemId -%>">
                <% props.entries.forEach((entry) => { %>
                    <% entry.group.forEach((item) => { %>
                        <%- include('./navitem-partial', {entry: item, display: props.display}) %>
                    <% }) %>
                <% }) %>
            </div>
        <% }  else { %>
            <ul class="dropdown-menu <%- styles.display -%> <%- styles.repeat -%>"
                aria-labelledby="<%- props.itemId -%>">
                <% props.entries.forEach((entry) => { %>
                    <%- include('./navitem-partial', {entry, display: props.display}) %>
                <% }) %>
            </ul>
        <% } %>
    <% } %>
</li>
