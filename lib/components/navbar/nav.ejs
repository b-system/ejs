<%
/**
 * @required {array} items
 */
const props = {
    items: items,
    hasLightNav: typeof hasLightNav !== 'undefined' ? hasLightNav : false,
}

function validate(props) {
    const keys = props.items.map((item) => Object.keys(item).filter((key) => !['id', 'label', 'href', 'entries', 'key'].includes(key))).flat()
    if (0 < keys.length) {
        throw new Error(`The "${keys.join(', ')}" key/s is/are invalid`)
    }
}

validate(props)


const styles = {
    light: {
        toString: () => {
            return props.hasLightNav ? 'light-nav' : ''
        }
    }
}
%>
<nav class="navbar navbar-expand-lg ">
    <ul class="navbar-nav <%- styles.light -%>">
        <% props.items.forEach((item)=> { %>
            <%- include(`${component}/navbar/navitem`, { ...item }) %>
        <% }) %>
    </ul>
</nav>

