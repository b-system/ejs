<% 
/**
 * @required { href:String, label:String, icon:String } link
 */

const props = {
    title: typeof title !== 'undefined' ? title : null,
    contacts: typeof contacts !== 'undefined' ? contacts : [],
    hasBackground: typeof hasBackground !== 'undefined' ? hasBackground : true,
    hasBorder: typeof hasBorder !== 'undefined' ? hasBorder : false,
    hasShadow: typeof hasShadow !== 'undefined' ? hasShadow : false,
}

const styles = {
        card: {
            bg: {
                toString: () => (props.hasBackground ? '' : 'card-bg-transparent')
            },
            border: {
                toString: () => (props.hasBorder ? 'card-border' : '')
            },
            shadow: {
                toString: () => (props.hasShadow ? 'card-shadow' : '')
            },
        }
    }

%>

<div class="card card-sticky card-bg <%- styles.card.bg -%> <%- styles.card.border -%> <%- styles.card.shadow -%> d-none d-md-block space-y-24 inner-space-block-24 inner-space-inline-24">
    <div class="d-flex justify-content-between align-items-center">
        <p class="body-dark-gray-text fw-bold"><%- props.title -%></p>
        <%- include(`${component}/icons/icon`, {icon: 'blade'}) %>
    </div>
    <span class="border-bottom d-block"></span>
    <% props.contacts.forEach((contact)=> { %>
        <%- include( `${component}/links/link`, {
            href: contact.link.href,
            label: contact.link.label,
            icon: contact.link.icon,
        } ) %>
        <span class="border-bottom"></span>
    <% }) %>
</div>
<div class="card card-sticky-mobile d-flex flex-row d-md-none">
    <% props.contacts.forEach((contact)=> { %>
        <%- include( `${component}/links/link`, {
            href: contact.link.href,
            label: contact.link.label,
            icon: contact.link.icon,
        } ) %>
    <% }) %>
</div>