<%
/**
 * @required {href:String, label:String, icon:String } link
 */

    const props = {
        title: typeof title !== 'undefined' ? title : null,
        text: typeof text !== 'undefined' ? text : null,
        name: typeof name !== 'undefined' ? text : null,
        job: typeof job !== 'undefined' ? job : null,
        tagText: typeof tagText !== 'undefined' ? tagText : null,
        tagColor: typeof tagColor !== 'undefined' ? tagColor : null,

        border: typeof border !== 'undefined' ? border : false,
        isRounded: typeof rounded !== 'undefined' ? rounded : false,
        isBackgroundColor: typeof isBackgroundColor !== 'undefined' ? isBackgroundColor : false,
        color: typeof color !== 'undefined' ? color : null,
        isBackgroundImg: typeof isBackgroundImg !== 'undefined' ? isBackgroundImg : false,
        img: typeof img !== 'undefined' ? img : null,

        link: link,

        gridBehavior: typeof gridBehavior !== 'undefined' ? gridBehavior : 'basic',
    }

    function validate(props) {
        const gridVariants = ['basic', 'horizontal', 'vertical', 'medium']

        if (!gridVariants.includes(props.gridBehavior)) {
            throw new Error(`The variant ${props.gridBehavior} doesn't exists`)
        }
    }
    validate(props)

    const style = {
        gridCell: {
            toString: ()=> {
                return [`gridcell-${props.gridBehavior}`,
                    props.border ? 'border' : '',
                    props.isRounded ? 'rounded' : ''
                ].join(' ').trim()
            }
        }
        background: {
            toString: ()=> {
                return [props.isBackgroundColor ? `background-color: ${props.color}` : '',
                props.isBackgroundImg ? `background-image: url("${image}/${props.img}")` : ''
                ].join(' ').trim()
            }
        }
    }
%>

<div class="<%- styles.gridCell -%>" style="<%- styles.background -%>">
    <% if(props.name || props.job) { %>
    <div class="gridcell-user">
        <p class="mb-0"><%= props.name %></p>
        <p class="mb-0"><%= props.job %></p>
    </div>
    <% } %>
    <div class="gridcell-content d-flex flex-column justify-content-between">
        <%- include(`${component}/interaction/ribbon`, {
            type: 'data',
            label: props.tagText,
            color: props.tagColor,
        }) %>
        <div class="content-info">
            <h5><%= props.title %></h5>
            <p class="body-light-gray-text"><%= props.text %></p>
        </div>
        <%- include( `${component}/links/link`, {
            href: props.link.href,
            label: props.link.label,
            icon: props.link.icon,
        } ) %>
    </div>
</div>