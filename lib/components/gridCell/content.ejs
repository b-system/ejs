<%
const props = {
    title: typeof title !== 'undefined' ? title : null,
    text: typeof text !== 'undefined' ? text : null,
    img: typeof img !== 'undefined' ? img : null,
    linkHref: typeof linkHref !== 'undefined' ? linkHref : null,
    linkLabel: typeof linkLabel !== 'undefined' ? linkLabel : null,
    linkIcon: typeof linkIcon !== 'undefined' ? linkIcon : null,
    color: typeof color !== 'undefined' ? color : false,
    border: typeof border !== 'undefined' ? border : false,
}

const data = {
    color: ['transparent', 'primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].includes(props.color),
}

const styles = {
    gridCell: {
        variant: {
            toString: () => {
                return [props.color ? `bg-${props.color}` : false,
                    props.border ? 'grid-cell-border' : ''
                ].join(' ')
                        .trim()
            }
        }
    }
}
%>

<div class="grid-cell grid-cell-content <%- styles.gridCell.variant -%>">
    <% if(props.img && props.color == false) { %>
        <picture class="grid-cell-container-img">
            <img class="grid-cell-img" src="<%- `${image}/${props.img.src}.jpg` -%>" alt="<%- props.img.alt -%>">
        </picture>
    <% }
    if(props.title && props.text) { %>
        <div class="grid-cell-content-wrapper ">
            <div class="interaction-element">
                1
            </div>
            <div class="grid-cell-content-info">
                <h4 class="text"><%= props.title %></h4>
                <p class="text body-light-gray-text mb-0"><%= props.text %></p>
            </div>
            <%- include( `${component}/links/link`, {
                href: props.linkHref,
                label: props.linkLabel,
                icon: props.linkIcon,
            } ) %>
        </div>
    <% } %>
</div>
