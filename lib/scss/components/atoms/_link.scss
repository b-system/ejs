@use '../../variables/colors' as *;
@use '../../variables/font';
@use '../../placeholders';
@use '../../helpers/themed';
@use '../../helpers' as helper;
@use '../../mixins' as mixin;

span,
a {
  &.action-link {
    display: flex;
    align-items: center;
    cursor: pointer;

    @include themed.properties {
      color: themed.values(helper.primary('eren'), helper.secondary(eren-400));
    }

    @include mixin.x(8);


    > span {
      font-weight: helper.weight(medium);
      line-height: helper.rem(24);
      color: inherit;
      transition: margin-right .25s ease-in-out;
    }

    &.link-bold > span {
      font-weight: helper.weight(bold);
    }

    &.link-regular > span {
      font-weight: helper.weight(regular)
    }

    &.link-light > span {
      font-weight: helper.weight(light);
    }

    > [class*='icon-'] {
      font-size: helper.rem(20);
      display: inline-flex;
      color: inherit;
      @include mixin.fast-transition(transform);
    }

    &:hover {
      @extend %action-link--hover;
    }

    &:active {
      @include themed.properties {
        color: themed.values($c-grayscale--ash, $c-grayscale--light);
      }
    }
  }
}

.active > .action-link,
.accordion-item > *:not([aria-expanded='false']) > .action-link,
.accordion-item > .action-link:not([aria-expanded='false']) {
  > span {
    font-weight: font.$f-w-light;
  }

  @include themed.properties {
    color: themed.values($c-grayscale--ash, $c-grayscale--light);
  }
}