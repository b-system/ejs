@use "sass:map";
@use '../../variables/colors' as *;
@use '../../placeholders';
@use '../../variables/palette';
@use '../../helpers/themed';
@use '../../helpers' as helper;
@use '../../mixins' as mixin;
@use '../../mixins/backgounds';
@use '../../mixins/text-color';

.btn-interactive {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: helper.rem(24);
  padding: 0;
  border: 0;
  width: helper.rem(56);
  height: helper.rem(48);
  border-radius: helper.rem(4);

  @include text-color.can-use(palette.$grayscale);


  @include themed.properties {
    @include backgounds.can-use((exclude:(map.keys(palette.$secondary))));
    background-color: themed.values($c-grayscale--100, $c-grayscale--1000);
  }

  &:hover,
  &:active {
    @include themed.properties {
      background-color: themed.values($c-grayscale--200, $c-grayscale--900);
    }
  }

  @include backgounds.can-use((eren, mikasa, armin), true);

  &-darkened {

    @include themed.properties {
      background-color: themed.values(helper.opacity(gray-300), $c-opacity__light--0);
    }

    > i {
      color: $c-grayscale--light;
    }

    &:hover,
    &:active {
      @include themed.properties {
        background-color: themed.values(helper.opacity(gray-300), $c-opacity__light--100);
      }
    }
  }

  &-rounded {
    @include mixin.circle(48);
  }

  &-tight {
    padding: 0;
    width: helper.rem(32);
    height: helper.rem(56);
    border-radius: helper.rem(16);

    > * {
      transform: rotate(90deg);
    }
  }
}
